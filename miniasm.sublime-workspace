{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"scc",
				"scccnt	int"
			],
			[
				"tmep",
				"temporary	int"
			],
			[
				"whi",
				"which	int"
			],
			[
				"temp",
				"temporary	int"
			],
			[
				"def",
				"define	#define"
			],
			[
				"Hea",
				"heapSize"
			],
			[
				"in",
				"inline	inline"
			],
			[
				"inc",
				"include	#include system"
			],
			[
				"Render",
				"Renderer	class"
			],
			[
				"rend",
				"Renderer"
			],
			[
				"sort",
				"sort(__wrap_iter<_Tp *> __first, __wrap_iter<_Tp *> __last, _Compare __comp)	void"
			],
			[
				"dep",
				"depth	const Float"
			],
			[
				"CLEA",
				"CLEAN_FILES	statement"
			],
			[
				"CLE",
				"CLEAN_FOLDERS	statement"
			],
			[
				"inva",
				"InvaildOperatorException"
			],
			[
				"NO",
				"NO_EQUAL_OPERATOR(className)	MARCO"
			],
			[
				"NONC",
				"NONCOMPARABLE(className)	MARCO"
			],
			[
				"filen",
				"filename	forstmt"
			],
			[
				"pat",
				"parent	forstmt"
			],
			[
				"Vec",
				"Vector2D.cpp"
			],
			[
				"atta",
				"attached_files	statement"
			],
			[
				"ma",
				"Matrix3.cpp"
			],
			[
				"Rec",
				"Rectangle.cpp"
			],
			[
				"V",
				"Vector2D.cpp"
			],
			[
				"Mat",
				"Math.cpp"
			],
			[
				"vec",
				"Vector2D.cpp"
			],
			[
				"TMath",
				"TMathObject1"
			],
			[
				"Math",
				"Math.hpp"
			],
			[
				"matr",
				"Matrix3"
			],
			[
				"FLA",
				"Float	Typedef"
			],
			[
				"y",
				"Y"
			],
			[
				"BAS",
				"BasicVector2D	classTemplate"
			],
			[
				"Inter",
				"IntersectWith(const ne::BasicRectangle<float> &rect) const	bool"
			],
			[
				"Bas",
				"BasicRectangle	classTemplate"
			],
			[
				"vect",
				"VectorType"
			],
			[
				"stat",
				"static	static"
			],
			[
				"type",
				"typename	typename"
			],
			[
				"left",
				"LeftTop"
			],
			[
				"Vect",
				"VectorType	Typedef"
			],
			[
				"Veco",
				"VectorType	Typedef"
			],
			[
				"pos",
				"Position"
			],
			[
				"bas",
				"BasicRectangle"
			],
			[
				"lef",
				"LeftTop"
			],
			[
				"Form",
				"Format(const std::string &fmt, const Args &args...)	std::string"
			],
			[
				"Ba",
				"BasicVector2D	classTemplate"
			],
			[
				"str",
				"StringFormat.hpp"
			],
			[
				"clas",
				"ClassAttribute.hpp"
			],
			[
				"fa",
				"false	false"
			],
			[
				"fabs",
				"fabs(double __x)	double"
			],
			[
				"num",
				"numeric_limits	classTemplate"
			],
			[
				"VEc",
				"Vector2D	Typedef"
			],
			[
				"ifnde",
				"ifndefdefine	#ifndefdefine"
			],
			[
				"sta",
				"static_cast	static_cast"
			],
			[
				"sing",
				"signed	signed"
			],
			[
				"dis",
				"distanceY	auto"
			],
			[
				"basic",
				"BasicVector2D"
			],
			[
				"cons",
				"const	const"
			],
			[
				"class",
				"className"
			],
			[
				"Basic",
				"BasicVector3D	classTemplate"
			],
			[
				"typ",
				"TypeConfiguration.hpp"
			],
			[
				"char",
				"char16_t	char16_t"
			],
			[
				"a",
				"A	ElementType"
			],
			[
				"wid",
				"Width"
			],
			[
				"heig",
				"Height"
			],
			[
				"ELE",
				"ELEMENT_GROUND	const char"
			],
			[
				"igo",
				"ignore()	std::basic_istream<char, std::char_traits<char> > &"
			],
			[
				"sudoku",
				"SUDOKU_SIZE"
			],
			[
				"sudok",
				"SUDOKU_SIZE"
			],
			[
				"MAXN",
				"MAX_NUMBER	MARCO"
			],
			[
				"d",
				"dowhile	dowhile"
			],
			[
				"un",
				"unsigned	unsigned"
			],
			[
				"whil",
				"while	while"
			],
			[
				"pop",
				"PopBack()	int"
			],
			[
				"push",
				"PushBack(const int &value)	void"
			],
			[
				"pr",
				"Prev	Deque::Node *"
			],
			[
				"else",
				"else	else"
			],
			[
				"ne",
				"Next	Deque::Node *"
			],
			[
				"els",
				"else	else"
			],
			[
				"it",
				"Item"
			],
			[
				"old",
				"old_last	statement"
			],
			[
				"ite",
				"item"
			],
			[
				"iter",
				"iterator	statement"
			],
			[
				"for",
				"for	for"
			],
			[
				"x",
				"X"
			],
			[
				"con",
				"const	const"
			],
			[
				"format",
				"fscanf(FILE *restrict __stream, const char *restrict __format, ...)	int"
			],
			[
				"size",
				"Size.hpp"
			],
			[
				"SDLgetwndwidth",
				"SDL_GetWindowSize(SDL_Window *window, int *w, int *h)	void"
			],
			[
				"SDLFa",
				"SDL_FALSE	SDL_bool"
			],
			[
				"if",
				"if	if"
			],
			[
				"m",
				"m_renderCallback"
			],
			[
				"Game",
				"GameInstance	class"
			],
			[
				"m_",
				"m_updateCallback"
			],
			[
				"gldestro",
				"glfwDestroyWindow(GLFWwindow *window)	void"
			],
			[
				"Elem",
				"ElementType"
			],
			[
				"Ele",
				"ElementType"
			],
			[
				"INTMax",
				"INT_MAX	MARCO"
			],
			[
				"st",
				"strapdown.js"
			],
			[
				"Lo",
				"LOOP"
			],
			[
				"clo",
				"Close	enum <anonymous>"
			],
			[
				"setpos",
				"Transformable::setPosition(const Vector2f &position)	void"
			],
			[
				"m_sta",
				"m_start	std::atomic<bool>"
			],
			[
				"false",
				"false	false"
			],
			[
				"m_s",
				"m_start(args)"
			],
			[
				"Threa",
				"Thread	class"
			],
			[
				"Thre",
				"Thread	class"
			],
			[
				"da",
				"data2	Sint32"
			],
			[
				"usin",
				"using namespace	using-namespace"
			],
			[
				"Windo",
				"WindowHeight	int"
			],
			[
				"Windhe",
				"WindowHeightKey	const char [14]"
			],
			[
				"Windw",
				"WindowWidth	int"
			],
			[
				"has",
				"HasParseError"
			],
			[
				"bo",
				"bool	bool"
			],
			[
				"stau",
				"status	bool"
			],
			[
				"incl",
				"include	#include <>"
			],
			[
				"glViewp",
				"glViewport(GLint x, GLint y, GLsizei width, GLsizei height)	void"
			],
			[
				"wndh",
				"wndWidth	int"
			],
			[
				"glviewport",
				"glViewport(GLint x, GLint y, GLsizei width, GLsizei height)	void"
			],
			[
				"Eve",
				"EventSystem	constructor"
			],
			[
				"sra",
				"StartRaiseEvent()	void"
			],
			[
				"eve",
				"EventSystem.hpp"
			],
			[
				"Eves",
				"EventsImpl.hpp"
			],
			[
				"SDLWIneve",
				"SDL_WINDOWEVENT	SDL_EventType"
			],
			[
				"ty",
				"typename	typename"
			],
			[
				"w",
				"window	SDL_WindowEvent"
			],
			[
				"Wind",
				"WindowResize	Typedef"
			],
			[
				"SDL_WINDres",
				"SDL_WINDOWEVENT_RESIZED	SDL_WindowEventID"
			],
			[
				"GLc",
				"GLContext	constructor"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"LIST PA",
				"Package Control: List Packages"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"predef",
				"Preferences: Settings - Default"
			],
			[
				"def",
				"AutoFileName: Default Settings"
			],
			[
				"ssc",
				"Set Syntax: C++11"
			],
			[
				"ssma",
				"Set Syntax: Markdown Extended"
			],
			[
				"ssmd",
				"Set Syntax: Markdown Extended"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"setstyle",
				"Clang Format: Select Style"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"settoml",
				"Set Syntax: TOML"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"int",
				"Indentation: Convert to Spaces"
			],
			[
				"astyle",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"remopve",
				"Package Control: Remove Package"
			],
			[
				"astryle",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"removebo",
				"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
			],
			[
				"gotob",
				"SublimeBookmarks: Goto Bookmark"
			],
			[
				"add book",
				"SublimeBookmarks: Add Bookmark"
			],
			[
				"bookm",
				"SublimeBookmarks: Goto Bookmark"
			],
			[
				"showa",
				"SublimeBookmarks: Show All Bookmarks "
			],
			[
				"add boo",
				"SublimeBookmarks: Add Bookmark"
			],
			[
				"list ",
				"Package Control: List Packages"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"insl",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"ssc++",
				"Set Syntax: C++11"
			],
			[
				"c++",
				"Set Syntax: C++11"
			],
			[
				"lis",
				"Package Control: List Packages"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"c++1",
				"Set Syntax: C++11"
			],
			[
				"ssmark",
				"Set Syntax: Markdown Extended"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"ssmarkdwo",
				"Set Syntax: Markdown Light"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"addbo",
				"SublimeBookmarks: Add Bookmark"
			],
			[
				"addd",
				"Project: Add Folder"
			],
			[
				"add",
				"SublimeBookmarks: Add Bookmark"
			],
			[
				"clearboo",
				"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
			],
			[
				"clear",
				"Bookmarks: Clear All"
			],
			[
				"showaboo",
				"SublimeBookmarks: Show All Bookmarks "
			],
			[
				"goto",
				"SublimeBookmarks: Goto Bookmark"
			],
			[
				"addboo",
				"SublimeBookmarks: Add Bookmark"
			],
			[
				"ycmgoto",
				"C++YouCompleteMe: Goto declaration"
			],
			[
				"show",
				"SublimeLinter: Show All Errors"
			],
			[
				"lint",
				"SublimeLinter: Show All Errors"
			],
			[
				"showal",
				"SublimeLinter: Show All Errors"
			],
			[
				"lintthis",
				"SublimeLinter: Lint This View"
			],
			[
				"showall",
				"SublimeLinter: Show All Errors"
			],
			[
				"lintalle",
				"SublimeLinter: Show All Errors"
			],
			[
				"linterlinter",
				"SublimeLinter: Toggle Linter"
			],
			[
				"install  ",
				"Package Control: Install Package"
			],
			[
				"colorp",
				"Color Picker"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"gitadd",
				"Git: Add Current File"
			],
			[
				"git  push",
				"Git: Push"
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"gitpus",
				"Git: Push"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"gitad",
				"Git: Add..."
			],
			[
				"ssmarkdown",
				"Set Syntax: Markdown Light"
			],
			[
				"ssmage",
				"Set Syntax: Git Commit Message"
			],
			[
				"clip",
				"Clipboard Manager: Show History"
			],
			[
				"re",
				"Indentation: Reindent Lines"
			],
			[
				"markdgf",
				"Set Syntax: Markdown GFM"
			],
			[
				"ssmak",
				"Set Syntax: Markdown"
			],
			[
				"gitg",
				"GitGutter: Compare Against HEAD"
			],
			[
				"sublimelinterl",
				"SublimeLinter: Show All Errors"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"li",
				"Package Control: List Packages"
			],
			[
				"git ",
				"Git: Push"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"git",
				"Git: Push"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"glsl",
				"Set Syntax: OpenGL SL"
			],
			[
				"ssgl",
				"Set Syntax: GLSL"
			],
			[
				"open",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"ssc++1",
				"Set Syntax: C++11"
			],
			[
				"ssc+",
				"Set Syntax: C++"
			],
			[
				"inc",
				"Indentation: Convert to Spaces"
			],
			[
				"listp",
				"Package Control: List Packages"
			],
			[
				"synpla	",
				"Set Syntax: Plain Text"
			],
			[
				"synht",
				"Set Syntax: HTML"
			]
		],
		"width": 536.0
	},
	"console":
	{
		"height": 259.0,
		"history":
		[
			"install cppcheck",
			"<package manager> install cppcheck",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/riteme/Code/miniasm"
	],
	"file_history":
	[
		"/home/riteme/Code/test/oi/Code/poj/P1236/NetworkOfSchools.cpp",
		"/home/riteme/Code/test/oi/Code/vijos/P1446/main.cpp",
		"/home/riteme/Code/test/oi/Code/poj/P2155/Matrix.cpp",
		"/home/riteme/Code/test/oi/Resources/status-reports/next.md",
		"/home/riteme/Code/test/oi/Code/poj/P1125/StockbrokerGrapevine.cpp",
		"/home/riteme/Code/test/oi/Code/poj/P1062/ExpensiveMarry-SPFA.cpp",
		"/home/riteme/Code/test/oi/Code/algs/Heap/SimpleIndexedHeap.cpp",
		"/home/riteme/Code/test/oi/Code/poj/P1062/ExpensiveMarry-Dijkstra.cpp",
		"/home/riteme/Code/test/oi/Resources/status-reports/2016-1-23.md",
		"/home/riteme/Code/test/oi/Code/poj/P1062/ExpensiveMarry.cpp",
		"/home/riteme/Code/ne2d/ne2d/RenderObject.hpp",
		"/home/riteme/Code/ne2d/ne2d/Layer.hpp",
		"/home/riteme/Code/ne2d/ne2d/Renderer.hpp",
		"/home/riteme/Code/ne2d/ne2d/Layer.cpp",
		"/home/riteme/Code/ne2d/ne2d/RenderObject.cpp",
		"/home/riteme/Code/ne2d/ne2d/ne2frag.frag",
		"/home/riteme/Code/ne2d/ne2d/ne2vert.vert",
		"/home/riteme/.config/sublime-text-3/Packages/User/clang_format_custom.sublime-settings",
		"/home/riteme/.config/sublime-text-3/Packages/Clang Format/clang_format_custom.sublime-settings",
		"/home/riteme/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/riteme/Code/ne2d/LICENSE",
		"/home/riteme/Code/ne2d/README.md",
		"/home/riteme/Code/ne2d/unittest/test_SDLWindow.cpp",
		"/home/riteme/Code/ne2d/ne2d/raw/SDLWindow.cpp",
		"/home/riteme/Code/ne2d/ne2d/raw/SDLSurface.hpp",
		"/home/riteme/Code/ne2d/ne2d/raw/SDLWindow.hpp",
		"/home/riteme/Code/ne2d/ne2d/math/Rectangle.hpp",
		"/home/riteme/Code/ne2d/ne2d/raw/SDLSurface.cpp",
		"/home/riteme/Code/ne2d/proj_conf.py",
		"/home/riteme/Code/ne2d/ne2d/math/Vector2D.hpp",
		"/home/riteme/Code/ne2d/clean.py",
		"/home/riteme/Code/ne2d/unittest/conf.py",
		"/home/riteme/Code/ne2d/install.py",
		"/home/riteme/Code/ne2d/ne2d/Interface.hpp",
		"/home/riteme/Code/ne2d/ne2d/raw/SDLException.hpp",
		"/home/riteme/Code/ne2d/ne2d/InvaildOperatorException.hpp",
		"/home/riteme/Code/ne2d/ne2d/InvaildOperatorException.cpp",
		"/home/riteme/Code/ne2d/ne2d/ClassAttribute.hpp",
		"/home/riteme/Code/ne2d/ne2d/raw/SDL.hpp",
		"/home/riteme/Code/ne2d/ne2d/raw/SDLException.cpp",
		"/home/riteme/Code/ne2d/ne2d/raw/SDL.cpp",
		"/home/riteme/Code/ne2d/ne2d/utility/FloatComparison.hpp",
		"/home/riteme/Code/ne2d/ne2d/math/Math.hpp",
		"/home/riteme/Code/ne2d/ne2d/math/Vector2D.cpp",
		"/home/riteme/Code/ne2d/ne2d/math/Rectangle.cpp",
		"/home/riteme/Code/ne2d/ne2d/math/Matrix3.hpp",
		"/home/riteme/Code/ne2d/ne2d/math/Matrix3.cpp",
		"/home/riteme/Code/ne2d/ne2d/math/Math.cpp",
		"/home/riteme/Code/ne2d/ne2d/utility/StringFormat.hpp",
		"/home/riteme/Code/ne2d/ne2d/Interface.cpp",
		"/home/riteme/Code/ne2d/unittest/run.py",
		"/home/riteme/Code/ne2d/src/math/Matrix3.hpp",
		"/home/riteme/Code/ne2d/unittest/test_Math.cpp",
		"/home/riteme/Code/ne2d/unittest/test_Matrix3.cpp",
		"/home/riteme/Code/ne2d/unittest/test_FloatComparison.cpp",
		"/home/riteme/Code/ne2d/src/ClassAttribute.hpp",
		"/home/riteme/Code/ne2d/unittest/test_StringFormat.cpp",
		"/home/riteme/Code/ne2d/unittest/test_Vector2D.cpp",
		"/home/riteme/Code/ne2d/unittest/test_Rectangle.cpp",
		"/home/riteme/Code/ne2d/unittest/TestTemplate.cpp",
		"/home/riteme/Code/ne2d/src/math/Math.hpp",
		"/home/riteme/Code/ne2d/src/math/Matrix3.cpp",
		"/home/riteme/Code/ne2d/src/math/Math.cpp",
		"/home/riteme/Code/ne2d/unittest/test_Vector.cpp",
		"/home/riteme/Code/ne2d/src/math/Rectangle.hpp",
		"/home/riteme/Code/ne2d/src/math/Vector2D.hpp",
		"/home/riteme/Code/ne2d/src/StringFormat.hpp",
		"/home/riteme/Code/ne2d/src/TypeConfiguration.hpp",
		"/home/riteme/Code/ne2d/src/utility/FloatComparison.hpp",
		"/home/riteme/Code/ne2d/src/utility/StringFormat.hpp",
		"/home/riteme/Code/ne2d/src/math/Vector2D.cpp",
		"/home/riteme/Code/ne2d/src/math/Rectangle.cpp",
		"/home/riteme/Code/ne2d/src/FloatComparison.hpp",
		"/home/riteme/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/riteme/Code/ne2d/src/Math.hpp",
		"/home/riteme/.config/sublime-text-3/Packages/User/Distraction Free.sublime-settings",
		"/home/riteme/Code/ne2d/src/Rectangle.hpp",
		"/home/riteme/Code/ne2d/src/Vector.hpp",
		"/home/riteme/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/riteme/.config/sublime-text-3/Packages/User/ConvertToUTF8.sublime-settings",
		"/home/riteme/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/riteme/.config/sublime-text-3/Packages/User/Default.sublime-keymap",
		"/home/riteme/.config/sublime-text-3/Packages/SideBarEnhancements/Side Bar.sublime-settings",
		"/home/riteme/.config/sublime-text-3/Packages/User/clang_format.sublime-settings",
		"/home/riteme/.config/sublime-text-3/Packages/User/C99.sublime-settings",
		"/home/riteme/.config/sublime-text-3/Packages/User/C++11.sublime-settings",
		"/home/riteme/.config/sublime-text-3/Packages/AutoFileName/autofilename.sublime-settings",
		"/home/riteme/.config/sublime-text-3/Packages/User/Base File.sublime-settings",
		"/home/riteme/Code/ne2d/unittest/test_template.cpp",
		"/home/riteme/Code/ne2d/.gitignore",
		"/home/riteme/Code/ne2d/check.py",
		"/home/riteme/Code/ne2d/build.py",
		"/usr/include/c++/v1/cmath",
		"/home/riteme/.config/sublime-text-3/Packages/SublimeBookmarks/Default.sublime-keymap",
		"/home/riteme/Code/test/oi/Code/tyvj/P1093/README.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1093/STATUS.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1093/input8.txt",
		"/home/riteme/Code/test/oi/Code/tyvj/P1093/main.cpp",
		"/home/riteme/Code/test/oi/Code/tyvj/P1093/data.in",
		"/home/riteme/Code/test/oi/Code/tyvj/P1020/main.cpp",
		"/home/riteme/Code/test/oi/Code/tyvj/P1020/commit-1.cpp",
		"/home/riteme/Code/test/oi/Code/tyvj/P1020/README.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1020/STATUS.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1026/STATUS.md",
		"/home/riteme/Code/test/oi/Code/openjudge/P9/main.cpp",
		"/home/riteme/Code/test/oi/Code/tyvj/P1165/README.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1165/STATUS.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1165/main.cpp",
		"/home/riteme/Code/test/oi/Code/tyvj/P1112/README.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1065/README.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1000/README.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1112/data.out",
		"/home/riteme/Code/test/oi/Code/tyvj/P1112/data.in",
		"/home/riteme/Code/test/oi/Code/tyvj/P1112/main.cpp",
		"/home/riteme/Code/test/oi/Code/tyvj/P1112/STATUS.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1065/main.cpp",
		"/home/riteme/Code/test/oi/Code/tyvj/P1065/STATUS.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1000/PROBLEM.md",
		"/home/riteme/Code/test/oi/Code/tyvj/P1000/main.cpp",
		"/home/riteme/Code/test/oi/Code/tyvj/P1000/STATUS.md",
		"/home/riteme/Code/test/oi/Code/homework/2015-9-19/Report.md",
		"/home/riteme/Code/test/oi/Code/unility/StreamIO.hpp",
		"/home/riteme/Code/test/oi/Code/homework/2015-9-19/3-4/main.cpp",
		"/home/riteme/Code/test/oi/Code/homework/2015-9-19/2-17/main.cpp",
		"/home/riteme/Code/test/oi/Code/homework/2015-9-19/3-6/main.cpp",
		"/home/riteme/Code/test/oi/Code/homework/2015-9-19/3-6/test.cpp",
		"/home/riteme/Code/test/oi/Code/homework/2015-9-19/3-5/main.cpp",
		"/home/riteme/Code/test/oi/Code/2015-9-19/3-6/main.cpp"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"i",
			"Code",
			"i",
			"i != 0 and ",
			"0",
			"or",
			"for",
			"mai",
			"KeyType",
			"typde",
			"ntype",
			"NMAX",
			"dsit",
			"default",
			"forward_iterator_tag",
			"<=",
			"for",
			"->",
			"FMT",
			"ntype",
			"int",
			"default",
			"const",
			"Size",
			"Position",
			"Size",
			"Position",
			"Vector2D",
			"ne2d",
			"friend",
			"name",
			"String",
			"cosnt",
			"Render",
			"deprecated",
			"Updat",
			"update",
			"true",
			"green",
			"src",
			"mode",
			"SDLSurface::",
			"SDL_Destrsurfac",
			";",
			"HashCode",
			"virtual",
			"friend",
			"void",
			"Cannot",
			"SDL window is invaild.",
			"= 0",
			"virtual",
			"SDLException",
			"m_op",
			"m_orpea",
			"= 0",
			";",
			"auto",
			"virtual",
			"operator",
			"SDLWindow",
			"cosn",
			"FileNotFoundError",
			"FileNotFoundErro",
			"FileNotFoundError",
			"copyright",
			" ==",
			"mat1",
			"hpp",
			".0f",
			"f",
			"inline",
			"TMatrix3",
			"const",
			"*this",
			"const",
			"*this",
			"friend",
			"*",
			"friend",
			"const",
			"auto",
			"lhs",
			"const",
			"lhs",
			"auto",
			"void",
			"const",
			"s",
			"auto",
			"ValueType",
			"NE2D_VECTOR_HPP_",
			"NE2D_MATH_RECTANGLE_HPP_",
			"NE2D_RECTANGLE_HPP_",
			"NE2D_MATRIX3_HPP_",
			"NE2D_MATRIX2_HPP_",
			"friend",
			"lhs",
			"const",
			"lhs",
			"const",
			"auto",
			"Inflate",
			"void",
			"auto",
			"throw",
			"ValueType",
			"Vector2D::",
			"operator",
			"Matrix",
			"BasicVector2D<double>",
			"BasicMatrix3<double>",
			"typename",
			"TRectangle",
			"typename",
			"TRectangle",
			"TValueType",
			"TVectorType",
			"TMatrix3",
			"TValueType",
			"TMatrix3",
			"TValueType",
			"TMatrix3",
			"TValueType",
			"TVector",
			"TMatrix3",
			"TVector",
			"template <typename TVector>"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"value_type &&__x"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CppYCM.2":
	{
		"height": 128.0
	},
	"output.CppYCM.3":
	{
		"height": 128.0
	},
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.cc":
	{
		"height": 128.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 218.0
	},
	"pinned_build_system": "Packages/User/Default.sublime-build",
	"project": "miniasm.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"next",
				"oi/Resources/status-reports/next.md"
			],
			[
				"ne",
				"oi/Resources/status-reports/next.md"
			],
			[
				"exp",
				"oi/Code/poj/P1062/ExpensiveMarry.cpp"
			],
			[
				"math",
				"src/Math.hpp"
			],
			[
				"testv",
				"unittest/test_Vector.cpp"
			],
			[
				"matr",
				"src/Matrix3.hpp"
			],
			[
				"ty",
				"src/TypeConfiguration.hpp"
			],
			[
				"eve",
				"src/EventsImpl.cpp"
			],
			[
				"main.cpp",
				"src/main.cpp"
			],
			[
				"settingcpp",
				"src/Setting.cpp"
			],
			[
				"settcpp",
				"src/Setting.cpp"
			],
			[
				"tools",
				"src/Tools.cpp"
			],
			[
				"settinghpp",
				"include/Setting.hpp"
			],
			[
				"globalcpp",
				"src/global.cpp"
			],
			[
				"global",
				"include/global.hpp"
			],
			[
				"logcpp",
				"src/LogSystem.cpp"
			],
			[
				"logsys",
				"include/LogSystem.hpp"
			],
			[
				"main",
				"src/main.cpp"
			],
			[
				"toolcpp",
				"src/Tools.cpp"
			],
			[
				"updacpp",
				"src/Update.cpp"
			],
			[
				"updahpp",
				"include/Update.hpp"
			],
			[
				"renhpp",
				"include/Render.hpp"
			],
			[
				"rendercpp",
				"src/Render.cpp"
			],
			[
				"renderhpp",
				"include/Render.hpp"
			],
			[
				"glo",
				"include/global.hpp"
			],
			[
				"rendercp",
				"src/Render.cpp"
			],
			[
				"updatec",
				"src/Update.cpp"
			],
			[
				"u",
				"src/Updating.cpp"
			],
			[
				"updcpp",
				"src/Updating.cpp"
			],
			[
				"updatehp",
				"include/Update.hpp"
			],
			[
				"evesyshpp",
				"include/EventSystem.hpp"
			],
			[
				"evets",
				"src/EventSystem.cpp"
			],
			[
				"eveh",
				"include/EventSystem.hpp"
			],
			[
				"evecpp",
				"src/EventSystem.cpp"
			],
			[
				"even",
				"include/EventSystem.hpp"
			],
			[
				"naticpp",
				"src/NativeSupport.cpp"
			],
			[
				"nativ",
				"include/NativeSupport.hpp"
			],
			[
				"rendecpp",
				"src/Render.cpp"
			],
			[
				"nat",
				"src/NativeSupport.cpp"
			],
			[
				"nati",
				"src/NativeSupport.cpp"
			],
			[
				"rencpp",
				"src/Render.cpp"
			],
			[
				"natic",
				"src/NativeSupport.cpp"
			],
			[
				"logf",
				"include/LogFucker.hpp"
			],
			[
				"fucker",
				"include/LogFucker.hpp"
			],
			[
				"thrcp",
				"src/Thread.cpp"
			],
			[
				"threa",
				"include/Thread.hpp"
			],
			[
				"threahp",
				"include/Thread.hpp"
			],
			[
				"logshpp",
				"include/LogSystem.hpp"
			],
			[
				"mainc",
				"src/main.cpp"
			],
			[
				"renderh",
				"Cpp/Renderer.h"
			],
			[
				"rendh",
				"Cpp/Renderer.h"
			],
			[
				"nativecpp",
				"src/NativeSupport.cpp"
			],
			[
				"nathpp",
				"include/NativeSupport.hpp"
			],
			[
				"mai",
				"src/main.cpp"
			],
			[
				"eventcpp",
				"src/EventSystem.cpp"
			],
			[
				"eventsh",
				"include/EventSystem.hpp"
			],
			[
				"thrcpp",
				"src/Thread.cpp"
			],
			[
				"rencp",
				"src/Render.cpp"
			],
			[
				"tickhp",
				"include/TickCounter.hpp"
			],
			[
				"tick",
				"src/TickCounter.cpp"
			],
			[
				"rend",
				"src/Render.cpp"
			],
			[
				"natu",
				"src/NativeSupport.cpp"
			],
			[
				"threcpp",
				"src/Thread.cpp"
			],
			[
				"gloc",
				"src/global.cpp"
			],
			[
				"globa",
				"include/global.hpp"
			],
			[
				"rendcpp",
				"src/Render.cpp"
			],
			[
				"natcpp",
				"src/NativeSupport.cpp"
			],
			[
				"renh",
				"Cpp/Renderer.h"
			],
			[
				"thr",
				"src/Thread.cpp"
			],
			[
				"threhpp",
				"include/Thread.hpp"
			],
			[
				"threcp",
				"src/Thread.cpp"
			],
			[
				"rende",
				"src/Render.cpp"
			],
			[
				"glob",
				"src/global.cpp"
			],
			[
				"ma",
				"test/project/learn-opengl/main.cpp"
			],
			[
				"alian",
				"~/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap"
			],
			[
				"sublimelin",
				"~/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Code/limoce.logging/temp/NEworld-Cpp-linux.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 288.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
